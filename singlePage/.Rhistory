grepl('[0-9]+',c('hello world'))
p <- "[0-9]+$"
grep(p,df[2,4])
grep(p,df[2,3])
grep(p,df[5,3])
sub(p,df[5,3])
gsub(p,df[5,3])
na.omit(as.numeric(unlist(strsplit(unlist(df$Summary), "[^0-9]+"))))
na.omit(as.numeric(as.character(unlist(strsplit(unlist(df$Summary), "[^0-9]+")))))
grep(p,df[5,3])
gsub(p,df[5,3])
gsub('.*-([0-9]+).*',df[5,3])
gsub('.*-([0-9]+).*',s)
gsub('.*-([0-9]+).*','\\1',s)
gsub('.*-([0-9]+).*','\\1',df[5,3])
gsub('.*-([0-9]+).*','\\1',df[1,3])
gsub('.*-([0-9]+).*$','\\1',df[1,3])
gsub('.*-([0-9]+).$*','\\1',df[1,3])
gsub('.*-([0-9]+)$*','\\1',df[1,3])
gsub('.*-([0-9]+).*','\\1',df[1,3])
gsub('.*-([0-9]+).$','\\1',df[1,3])
gsub('.([0-9]+).$','\\1',df[1,3])
gsub('[0-9]+$','\\1',df[1,3])
gsub('.*-([0-9]+).*','\\1',df[1,3])
gsub('.*-([0-9]+).*','\\2',df[1,3])
gsub('.*-([0-9]+).*','\\1',df[1,3])
gsub('.*-([0-9]+).*','\1',df[1,3])
gsub('.*-([0-9]+).*','\\1',df[1,3])
gsub('.*-([0-9]+).*','\\1',df[2,3])
grepl('[0-9]*',c('hello world'))
grepl('[0-9]',c('hello world'))
grepl('[0-9]',c('hello world 2'))
grepl('[0-9]+',c('hello world 2'))
grep('[0-9]+',c('hello world 2'))
grep('[0-9]+',c('hello 2 world'))
data <- read.csv("/Users/jerad/Documents/Rcode/JIRASubtastVelocity/sprint1.csv")
path <- "/Users/jerad/Documents/Rcode/JIRASubtastVelocity/sprint1.csv"
data <- read.csv(path)
View(data)
data <- data[c(3:dim(data)[1]), ]
colnames(data) <- unlist(data[1,])
data <- data[-1,]
library('stringr')
library(stringr)
detach("package:stringr", unload=TRUE)
library(stringr)
detach("package:stringr", unload=TRUE)
library('stringr')
s1 <- "SCS-3 Handle invalid email address on submit | 2"
s2 <- "SCS-52 Setup expandable table rows | 3"
s3 <- "SCS-59 Get device details API | 22"
p <- "[0-9]+$"
gsub(p,'\\1',s1)
p <- "-([0-9]+$)"
gsub(p,'\\1',s1)
gsub('[^0-9]+','\\1',s1)
p <- "[0-9]+$"
gsub(p,'\\1',s1)
gsub(p,'\\1',s1, fixed = TRUE)
gsub(p,'\\1',s1)
sub(p,'\\1',s1)
!sub(p,'\\1',s1)
s1[!sub(p,'\\1',s1)]
s1[1:3]
s1[1]
s1(1)
gsub(p,'\\1',s1)
grep(p,'\\1',s1)
grepl(p,'\\1',s1)
regexpr(p,'\\1',s1)
gregexpr(p,'\\1',s1)
regexec(p,'\\1',s1)
regexpr(p,'\\1',s1)
regexpr(p,'\\1',s2)
regexec(p,'\\1',s2)
s2
gregexpr(p,'\\1',s2)
grepl(p,'\\1',s2)
grep(p,'\\1',s2)
gsub(p,'\\1',s2)
substr(s2,gsub(p,'\\1',s2))
length(s2)
dim(s2)
nchar(s2)
substr(s2,gsub(p,'\\1',s2),nchar(s2))
substr(s2,gsub(p,'\\1',s2),37)
substr(s2,nchar(gsub(p,'\\1',s2)),nchar(s2))
as.numeric(substr(s2,nchar(gsub(p,'\\1',s2)),nchar(s2)))
as.numeric(substr(s1,nchar(gsub(p,'\\1',s1)),nchar(s1)))
as.numeric(substr(s3,nchar(gsub(p,'\\1',s3)),nchar(s3)))
p
as.numeric(substr(s3,nchar(gsub(p,s3)),nchar(s3)))
as.numeric(substr(s3,nchar(gsub(p,'\\2',s3)),nchar(s3)))
as.numeric(substr(s3,nchar(gsub(p,'\\1',s3)),nchar(s3)))
as.numeric(substr(s3,nchar(gsub(p,'\\1',s3)),nchar(s3)))
g <- gsub(p,'\\1',s3)
s <- substr(s3,nchar(g),nchar(s3))
as.numeric(s)
as.numeric(substr(s3,nchar(gsub(p,'\1',s3)),nchar(s3)))
as.numeric(substr(s3,nchar(gsub(p,'\6',s3)),nchar(s3)))
as.numeric(substr(s3,nchar(gsub(p,'\9',s3)),nchar(s3)))
as.numeric(substr(s3,nchar(gsub(p,'\\9',s3)),nchar(s3)))
as.numeric(substr(s3,nchar(gsub(p,'the',s3)),nchar(s3)))
as.numeric(substr(s3,nchar(gsub(p,'sc',s3)),nchar(s3)))
as.numeric(substr(s3,nchar(gsub(p,'scs',s3)),nchar(s3)))
s3
as.numeric(substr(s3,nchar(gsub(p,'SCS',s3)),nchar(s3)))
as.numeric(substr(s3,nchar(gsub(p,'SS',s3)),nchar(s3)))
as.numeric(substr(s3,nchar(gsub(p,'S',s3)),nchar(s3)))
as.numeric(substr(s3,nchar(gsub(p,'',s3)),nchar(s3)))
as.numeric(substr(s3,nchar(gsub(p,NA,s3)),nchar(s3)))
as.numeric(substr(s3,nchar(gsub(p,'',s3)),nchar(s3)))
as.numeric(substr(s1,nchar(gsub(p,'',s1)),nchar(s1)))
s4 <- "Hello World"
as.numeric(substr(s4,nchar(gsub(p,'',s4)),nchar(s4)))
as.numeric(substr(s1,nchar(gsub('[0-9]+','',s1)),nchar(s1)))
as.numeric(substr(s1,nchar(gsub('[0-9]+$','',s1)),nchar(s1)))
as.numeric(substr(s1,nchar(gsub('[0-9]+','\\1',s1)),nchar(s1)))
as.numeric(substr(s1,nchar(gsub('[0-9]','\\1',s1)),nchar(s1)))
as.numeric(substr(s1,nchar(gsub('[0-9]$','\\1',s1)),nchar(s1)))
as.numeric(substr(s3,nchar(gsub('[0-9]$','\\1',s3)),nchar(s3)))
# library('stringr')
extract <- function(summary){
## Extract Story Points from Summary
# [0-9]+$ = regex for last number with length > 0
# gsub('[0-9]+$','\\1',i) = extracts the entire string not matching [0-9]+$ pattern
# substr() takes out everything from the original string except what we want
pattern <- '[0-9]+$'
# create the inverse of the desired string characters
inverseString <- gsub(pattern, '\\1', summary)
# subset original string by removing the inverseString from it
string <- substr(summary, nchar(inverseString), nchar(summary))
# coerse desired characters from string into numeric for column input
num <- as.numeric(string)
return(num)
}
for (summary in data$summary) {
data$storyPoints <- extract(summary)
}
data$Summary[1]
for (i in data$Summary) {
data$storyPoints <- extract(i)
}
remove(summary)
for (i in data$Summary) {
data$storyPoints <- extract(i)
}
data$storyPoints[1] <- extract(data$Summary[1])
unlist(data$Summary[1])
as.character(data$Summary[1])
data$storyPoints[1] <- extract(data$Summary[1])
data$storyPoints[1] <- extract(data$Summary[1])
data$storyPoints[1] <- extract(as.character(data$Summary[1]))
extract <- function(summary){
## Extract Story Points from Summary
# [0-9]+$ = regex for last number with length > 0
# gsub('[0-9]+$','\\1',i) = extracts the entire string not matching [0-9]+$ pattern
# substr() takes out everything from the original string except what we want
# coerce factor variable to character vector
summary <- as.character(summary)
pattern <- '[0-9]+$'
# create the inverse of the desired string characters
inverseString <- gsub(pattern, '\\1', summary)
# subset original string by removing the inverseString from it
string <- substr(summary, nchar(inverseString), nchar(summary))
# coerse desired characters from string into numeric for column input
num <- as.numeric(string)
return(num)
}
data$storyPoints[1] <- extract(data$Summary[1])
for (i in data$Summary){
data$storyPoints <- extract(i)
}
apply(data, 'Summary', extract(x))
apply(data, 'Summary', function(x) extract(x))
apply(data, 'Summary', function(data) extract(data))
apply(data$Summary, 1, function(x) extract(x))
apply(data$Summary, 2, function(x) extract(x))
apply(data$Summary, 1, function(data$Summary) extract(data$Summary))
lapply(data$Summary, extract)
x <- c(lapply(data$Summary, extract))
lapply(data[3], extract)
lapply(data$Summary, extract)
lapply(data$Summary, extract)
extract(data$Summary[1])
extract(data$Summary[2])
extract(data$Summary[3])
for(i in data$Summary[i]){
extract(data$Summary[i])
}
for(i in data$Summary[i]){
data$storyPoints <- extract(data$Summary[i])
}
data$storyPoints <- lapply(data$Summary, function(x) sapply(x, extract))
data[,"storyPoints":=sapply("Summary", extract)]
data[,storyPoints:=sapply(Summary, extract)][]
data[,"storyPoints":=sapply("Summary", extract)][]
DT = data.table(data)
for(i in 1:29){}
for(i in 1:29){
extract(data$Summary[i])
}
for(i in 1:20){
extract(data$Summary[i])
}
for(i in 1:2){
extract(data$Summary[i])
}
for(i in 1){
extract(data$Summary[i])
}
for(i in 1:2){
1+i
}
for(i in 1:29){
extract(data$Summary[i])
}
for(i in 1:2){
extract(data$Summary[i])
}
for(i in 1:2){
return(extract(data$Summary[i]))
}
for(i in 1:2){
print(extract(data$Summary[i]))
}
for(i in 1:5){
print(extract(data$Summary[i]))
}
for(i in 1:9){
print(extract(data$Summary[i]))
}
for(i in 1:19){
print(extract(data$Summary[i]))
}
extract(data$Summary[15])
extract(data$Summary[14])
extract(data$Summary[16])
extract(data$Summary[15])
extract(data$Summary[15])
data$Summary[15]
unlink(data$Summary[15])
View(data)
data$Summary[15]
unlist(data$Summary[15])
as.character(data$Summary[15])
class(data$Summary[15])
type(data$Summary[15])
extract(data$Summary[15])
extract(data$Summary[16])
extract(gsub("\u0081|'", "",data$Summary[15]))
tmp <- gsub("\u0081|'", "",data$Summary[15])
tmp
data$Summary[15]
tmp <- gsub("\\u0081|'", "",data$Summary[15])
tmp
data <- read.csv(path, stringsAsFactors = FALSE)
class(data$Summary[15])
class(data[3])
data <- data[c(3:dim(data)[1]), ]
colnames(data) <- unlist(data[1,])
data <- data[-1,]
View(data)
class(data$Summary[15])
extract(data$Summary[16])
extract(data$Summary[15])
data$Summary[15]
tmp <- gsub("<>", "",data$Summary[15])
tmp
tmp <- gsub("<d2>", "",data$Summary[15])
tmp
tmp <- gsub("\<d2>", "",data$Summary[15])
tmp <- gsub("\xd2", "",data$Summary[15])
tmp
data$Summary[15]
data <- read.csv(path, stringsAsFactors = FALSE, encoding = "latin1")
data <- read.csv(path, stringsAsFactors = FALSE, encoding = "UTF-8")
View(data)
data <- data[c(3:dim(data)[1]), ]
data <- data[c(3:dim(data)[1]), ]
colnames(data) <- unlist(data[1,])
data <- data[-1,]
data <- read.csv(path, stringsAsFactors = FALSE)
data <- data[c(3:dim(data)[1]), ]
colnames(data) <- unlist(data[1,])
data <- data[-1,]
View(data)
tmp <- gsub("/<d2>", "",data$Summary[15])
tmp
data$Summary[15]
tmp <- gsub("\<d2>", "",data$Summary[15])
tmp <- gsub("\'<d2>'", "",data$Summary[15])
tmp
tmp <- gsub("\xd2", "",data$Summary[15])
tmp
data$Summary[15] <- gsub("\xd2", "",data$Summary[15])
tmp <- gsub("\xd2", "",data$Summary[15])
tmp
tmp <- gsub("\xd3", "",data$Summary[15])
tmp
data <- read.csv(path, stringsAsFactors = FALSE)
data <- data[c(3:dim(data)[1]), ]
colnames(data) <- unlist(data[1,])
data <- data[-1,]
tmp <- gsub("\xd2 \xd3", "",data$Summary[15])
tmp
tmp <- gsub("\xd2|\xd3", "",data$Summary[15])
tmp
data$Summary <- gsub("\xd2|\xd3", "",data$Summary)
View(data)
data <- read.csv(path, stringsAsFactors = FALSE)
data <- data[c(3:dim(data)[1]), ]
colnames(data) <- unlist(data[1,])
data <- data[-1,]
data$Summary <- gsub("\xd2|\xd3", "",data$Summary)
for (i in data$Summary) {
data$storyPoints <- extract(i)
}
for (i in data){print(Summary[i])}
for (i in data){print(data$Summary[i])}
for (i in data) {
data$storyPoints <- extract(data$Summary[i])
}
for(i in data){print(i)}
print(data$Summary[1])
for(i in data$Summary){print(data$Summary(i))}
for(i in data$Summary){print(data$Summary[i])}
for(i in data$Summary){print(data$Summary[[i]])}
for(i in data$Summary){print(data$Summary)}
data$storyPoints <- extract(data$Summary)
extract(data$Summary[1])
extract(data$Summary[15])
extract(data$Summary[16])
data  <- read.table(file = '/Users/jerad/Documents/Data/NBA13-14players.numbers', sep ',')
data  <- read.table(file = '/Users/jerad/Documents/Data/NBA13-14players.numbers', sep = ',')
data  <- read.csv('/Users/jerad/Documents/Data/NBA13-14players.numbers')
data  <- read.csv('/Users/jerad/Documents/Data/NBA13-14players.csv')
View(data)
update()
update('r')
install.packages(c("BH", "car", "caret", "digest", "dplyr", "foreach", "ggplot2", "gtable", "htmltools", "httpuv", "iterators", "jsonlite", "lme4", "mime", "munsell", "nlme", "pbkrtest", "quantreg", "R6", "rattle", "Rcpp", "RcppEigen", "scales", "shiny", "shinydashboard", "SparseM", "stringi", "xtable"))
install.packages(c("car", "caret", "Rcpp", "shiny"))
library(shiny)
runExample("01_hello")
runApp('Documents/Rcode/Weekly_Status_Report/WSR')
runApp('Documents/Rcode/Weekly_Status_Report/WSR')
runApp('Documents/Rcode/Weekly_Status_Report/WSR')
runApp('Documents/Weekly_Status_Report')
runApp('Documents/Weekly_Status_Report')
)
library(shinydashboard)
print(source('Desktop/ui.R')$value)
print(source('Desktop/WSRdash.R')$value)
print(source('Desktop/WSRdash.R')$value)
runApp('Documents/Weekly_Status_Report')
print(source('Documents/Weekly_Status_Report/wsrDash.R')$value)
print(source('Documents/Weekly_Status_Report/wsrDash.R')$value)
print(source('Documents/Weekly_Status_Report/wsrDash.R')$value)
print(source('Documents/Weekly_Status_Report/wsrDash.R')$value)
print(source('Documents/Weekly_Status_Report/wsrDash.R')$value)
print(source('Documents/Weekly_Status_Report/wsrDash.R')$value)
print(source('Documents/Weekly_Status_Report/wsrDash.R')$value)
print(source('Documents/Weekly_Status_Report/wsrDash.R')$value)
print(source('Documents/Weekly_Status_Report/wsrDash.R')$value)
print(source('Documents/Weekly_Status_Report/wsrDash.R')$value)
runApp('Documents/Weekly_Status_Report')
print(source('Documents/Weekly_Status_Report/wsrDash.R')$value)
runApp('Documents/Weekly_Status_Report')
runApp('Documents/Weekly_Status_Report')
print(source('Documents/Weekly_Status_Report/wsrDash.R')$value)
runApp('Documents/Weekly_Status_Report')
print(source('Documents/Weekly_Status_Report/wsrDash.R')$value)
print(source('Documents/Weekly_Status_Report/wsrDash.R')$value)
runApp('Documents/Weekly_Status_Report')
runApp('Documents/Weekly_Status_Report')
print(source('Documents/Weekly_Status_Report/wsrDash.R')$value)
print(source('Documents/Weekly_Status_Report/wsrDash.R')$value)
print(source('Documents/Weekly_Status_Report/wsrDash.R')$value)
print(source('Documents/Weekly_Status_Report/wsrDash.R')$value)
print(source('Documents/Weekly_Status_Report/wsrDash.R')$value)
print(source('Documents/Weekly_Status_Report/wsrDash.R')$value)
print(source('Documents/Weekly_Status_Report/wsrDash.R')$value)
print(source('Documents/Weekly_Status_Report/wsrDash.R')$value)
print(source('Documents/Weekly_Status_Report/wsrDash.R')$value)
runApp('Documents/Weekly_Status_Report')
print(source('Documents/Weekly_Status_Report/wsrDash.R')$value)
print(source('Documents/Weekly_Status_Report/wsrDash.R')$value)
print(source('Documents/Weekly_Status_Report/wsrDash.R')$value)
print(source('Documents/Weekly_Status_Report/wsrDash.R')$value)
print(source('Documents/Weekly_Status_Report/wsrDash.R')$value)
print(source('Documents/Weekly_Status_Report/wsrDash.R')$value)
print(source('Documents/Weekly_Status_Report/wsrDash.R')$value)
file.path('/some','directory')
file.path('/some','directory','here')
print(source('Documents/Weekly_Status_Report/wsrDash.R')$value)
runApp('Documents/Weekly_Status_Report')
print(source('Documents/Weekly_Status_Report/dashboard/wsrDash.R')$value)
runApp('Documents/Weekly_Status_Report/dashboard')
runApp('Documents/Weekly_Status_Report/dashboard')
runApp('Documents/Weekly_Status_Report/dashboard')
runApp('Documents/Weekly_Status_Report/dashboard')
runApp('Documents/Weekly_Status_Report/dashboard')
runApp('Documents/Weekly_Status_Report/dashboard')
runApp('Documents/Weekly_Status_Report/dashboard')
runApp('Documents/Weekly_Status_Report/dashboard')
runApp('Documents/Weekly_Status_Report/dashboard')
runApp('Documents/Weekly_Status_Report/dashboard')
runApp('Documents/Weekly_Status_Report/dashboard')
runApp('Documents/Weekly_Status_Report/dashboard')
runApp('Documents/Weekly_Status_Report/dashboard')
runApp('Documents/Weekly_Status_Report/dashboard')
install.packages("googlesheets")
runApp('Documents/Weekly_Status_Report/dashboard')
library(googlesheets)
suppressMessages(library(dplyr))
(my_sheets <- gs_ls)
View(my_sheets)
View(server)
gs_ls()
practiceWSR
gs_ls() %>% practiceWSR
gs_ls() %>% glimpse()
practice <- gs_title("practiceWSR")
practice
practice %>% gs_browse()
col_names(practice)
gs_read(practice)
gs_read(practice, col_names = TRUE)
gs_read(practice)
gs_edit_cells(practice, input = c("4/14/2016", "restaurant app", "Account Manager", "yellow", "This week our client did not pay us"))
gs_add_row(practice, input = c("4/14/2016", "restaurant app", "Account Manager", "yellow", "This week our client did not pay us"))
runApp('Documents/Weekly_Status_Report/dashboard')
runApp('Documents/Weekly_Status_Report/dashboard')
print(c(1:4))
testing <- function() {
print(c(1:4))
}
testing
testing()
runApp('Documents/Weekly_Status_Report/dashboard')
print("1 2 3 4")
print(str("1 2 3 4"))
runApp('Documents/Weekly_Status_Report/dashboard')
print(str("Hello"))
runApp('Documents/Weekly_Status_Report/dashboard')
runApp('Documents/Weekly_Status_Report/dashboard')
runApp('Documents/Weekly_Status_Report/dashboard')
runApp('Documents/Weekly_Status_Report/dashboard')
runApp('Documents/Weekly_Status_Report/dashboard')
runApp('Documents/Weekly_Status_Report/dashboard')
runApp('Documents/Weekly_Status_Report/dashboard')
runApp('Documents/Weekly_Status_Report/dashboard')
runApp('Documents/Weekly_Status_Report/dashboard')
install.packages("DT")
shiny::runApp('Documents/Weekly_Status_Report/singlePage')
runApp('Documents/Weekly_Status_Report/singlePage')
datatable(data = list(c(1:3),c(4:6),c(7:9)))
matrix(data = c(1:9), nrow = 3, ncol = 3)
matrix(data = (1:9), nrow = 3, ncol = 3)
m <- matrix(data = (1:9), nrow = 3, ncol = 3)
datatable(data = m)
runApp('Documents/Weekly_Status_Report/singlePage')
runApp('Documents/Weekly_Status_Report/singlePage')
runApp('Documents/Weekly_Status_Report/singlePage')
runApp('Documents/Weekly_Status_Report/singlePage')
matrix(data = (1:9), nrows = 3, ncol = 3)
matrix(data = (1:9), nrow = 3, ncol = 3)
runApp('Documents/Weekly_Status_Report/singlePage')
runApp('Documents/Weekly_Status_Report/singlePage')
datatable(data = m)
runApp('Documents/Weekly_Status_Report/singlePage')
runApp('Documents/Weekly_Status_Report/singlePage')
runApp('Documents/Weekly_Status_Report/singlePage')
runApp('Documents/Weekly_Status_Report/singlePage')
datatable(data = m)
runApp('Documents/Weekly_Status_Report/singlePage')
runApp('Documents/Weekly_Status_Report/singlePage')
runApp('Documents/Weekly_Status_Report/singlePage')
runApp('Documents/Weekly_Status_Report/singlePage')
m
datatable(m)
runApp('Documents/Weekly_Status_Report/singlePage')
runApp('Documents/Weekly_Status_Report/singlePage')
gs_ls()
sheet <- gs_title("practiceWSR")
sht <- gs_read_csv(sheet)
sht
runApp('Documents/Weekly_Status_Report/singlePage')
runApp('Documents/Weekly_Status_Report/singlePage')
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
gs_sheet('practiceWSR') %>% gs_read_csv()
gs_title('practiceWSR') %>% gs_read_csv()
gs_title("practiceWSR")
gs_read_csv(key = '1W29q-g6hidvtKQkA5CoKySUVlrWO9tojU9jns822foc')
gs_read_csv(ss = 'practiceWSR', key = '1W29q-g6hidvtKQkA5CoKySUVlrWO9tojU9jns822foc')
runApp('Documents/Weekly_Status_Report/singlePage')
runApp('Documents/Weekly_Status_Report/singlePage')
runApp('Documents/Weekly_Status_Report/singlePage')
runApp('Documents/Weekly_Status_Report/singlePage')
runApp('Documents/Weekly_Status_Report/singlePage')
runApp('Documents/Weekly_Status_Report/singlePage')
rsconnect::showLogs()
rsconnect::showLogs(app.R)
rsconnect::showLogs()
shiny::runApp()
getOption("googlesheets.webapp.client_id")
getOption("googlesheets.webapp.redirect_uri")
MY_CLIENT_ID
runApp()
runApp()
install.packages(c("candisc", "corrplot", "devtools", "evaluate", "RandomFields", "RandomFieldsUtils", "rgdal", "rgeos", "rjags", "testthat"))
install.packages(c("rgdal", "rgeos", "rjags"))
